
@using CourseRegistration.Models

@{
    ViewBag.Title = "RegisterClassForHR";
}

<ul class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home")</li>
    <li>@Html.ActionLink("Class", "Index", "Class")</li>
    <li>@Html.ActionLink((String)ViewBag.CourseClass.ClassId, "Details", "Class", new { id = ViewBag.CourseClass.ClassId }, new { })</li>
    <li>Registration</li>
</ul>

<h2>@Html.Encode(ViewBag.CourseClass.ClassId) Class Registration</h2>

<h4>@Html.Encode(ViewBag.CourseClass.Course.CourseTitle)</h4>

<p>
    @Html.Encode(ViewBag.CourseClass.Course.CourseDescription)
</p>

<p>Fee: @Html.Encode(ViewBag.CourseClass.Course.Fee)</p>
<p>Duration: @Html.Encode(ViewBag.CourseClass.Course.NumberOfDays) days</p>
<p>Start Date: @Html.Encode(ViewBag.CourseClass.StartDate.ToString("yyyy-MM-dd")) & End Date: @Html.Encode(ViewBag.CourseClass.EndDate.ToString("yyyy-MM-dd"))</p>
    
    <div class="panel panel-default">
        <div class="panel-heading" data-toggle="collapse" data-target="#collapse1" aria-expanded="true" aria-controls="collapse1">
            <h3 class="panel-title">Step1: Participant Details</h3>
        </div>
        <div class="panel-collapse collapse in" id="collapse1">
            <div class="panel-body">
                <div>
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#myModal1" data-whatever="add new">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add New Participant
                    </button>
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#myModal2" data-whatever="">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add from Employee List
                    </button>
                    <hr />
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div id="newParticipants">

                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div id ="oldParticipants">

                        </div>
                    </div>
                </div>         
            </div>
        </div>
    </div>

@using (Html.BeginForm("RegisterClassForHR", "Class", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("ClassId",(String)ViewBag.CourseClass.ClassId)
    @Html.Hidden("NewParticipantList")
    @Html.Hidden("OldParticipantList")
    
    <div class="panel panel-default">
        <div class="panel-heading" data-toggle="collapse" data-target="#collapse2" aria-expanded="false" aria-controls="collapse2">
            <h3 class="panel-title">Step2: Bill Details</h3>
        </div>
        <div class="collapse in" id="collapse2">
            <div class="panel-body">
                <div class="form-horizontal">
                    <h4>Billing Address</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("Address", new { htmlAttributes = new { @class = "form-control", @value = ViewBag.Address } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("PersonName", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("PersonName", new { htmlAttributes = new { @class = "form-control", @value = ViewBag.PersonName } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("Country", new { htmlAttributes = new { @class = "form-control", @value = ViewBag.Country } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("PostalCode", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("PostalCode", new { htmlAttributes = new { @class = "form-control" ,@value=ViewBag.PostalCode } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

     <nav>
        <div class="pager">
            @*<li class="previous"><a href="#"><span aria-hidden="true">&larr;</span> Previous</a></li>*@
            @*<li class="next"><a href="#">Register</a></li>*@
            <input class="btn btn-primary" style="float:right;" type="submit" value="Register Now" />
        </div>
    </nav>
}

<div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModal1Label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Participant</h4>
            </div>
            @using (Ajax.BeginForm("CreateParticipant", "Class",new { @id="create" }, new AjaxOptions { OnBegin="createBegin", OnSuccess="createSuccess", OnFailure="createFailure", HttpMethod="POST"}))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("NewParticipant")
                <div class="modal-body" id="myModal1Body">
                    @Html.Partial("CreateParticipant")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModal2Label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Employee List</h4>
            </div>
            <div class="modal-body" id="modal2Body">
                @foreach (var item in ViewBag.Participants)
                {
                    <div class="checkbox">
                        <label>
                            @item.FullName <input type="checkbox" value="@item.ParticipantId" name="@item.ParticipantId">
                        </label>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="empBtn">Comfirm</button>
            </div>
        </div>
    </div>
</div>


<script>
    var newParticipants;
    var oldParticipants;

    $(document).ready(function () {
        newParticipants = [];
        oldParticipants = [];
    });

    //new participant modal
    $('#myModal1').on('show.bs.modal', function (event) {
        //var button = $(event.relatedTarget) // Button that triggered the modal
        //var recipient = button.data('whatever') // Extract info from data-* attributes
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        //var modal = $(this)
        //modal.find('.modal-title').text(recipient)
        //modal.find('.modal-body p').text(recipient + "description")
    })

    //employeeList modal
    $('#myModal2').on('show.bs.modal', function (event) {
        //$.get('GetEmployeeList', function (response) {
        //    $('#modal2Body').html(response);
        //});

        //var inputs = document.getElementById('participants').getElementsByTagName('input');
        //if (inputs.length != 0) {
        //    for (var i = 0; i < participants.length; i++) {
        //        inputs[i].checked = participants[i].selected;
        //    }
        //}
        
    })

    $('#myModal2').on('hidden.bs.modal', function (event) {
        var inputs = document.getElementById('modal2Body').getElementsByTagName('input');
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == 'checkbox') {
                inputs[i].checked = false;
            }
        }
        var selected;
        for (var j = 0; j < curParticipants.length; j++) {
            selected = null;
            selected = document.getElementsByName(curParticipants[j]);
            if (selected != null) {
                selected[0].checked = true;
            }
        }
        
    })

    $('#empBtn').click(function (event) {
        changeParticipants();
        $('#myModal2').modal('hide')
    })

    

    function compare(array1, array2) {
        return (array1.length == array2.length) && array1.every(function (element, index) {
            return element == array2[index]});
    }

    //instead of model in createParticipant page
    //function getNewParticipant() {
    //    var participant = {};
    //    var area = document.getElementById(id);
    //    participant.IdNumber = document.getElementById('newp_IdNumber').getAttribute('value');
    //    participant.Salutation = document.getElementById('newp_Salutation').getAttribute('value');
    //    participant.JobTitle = document.getElementById('newp_JobTitle').getAttribute('value');
    //    participant.Department = document.getElementById('newp_Department').getAttribute('value');
    //    participant.FullName = document.getElementById('newp_FullName').getAttribute('value');
    //    participant.Gender = document.getElementById('newp_Gender').getAttribute('value');
    //    participant.Nationality = document.getElementById('newp_Nationality').getAttribute('value');
    //    participant.DateOfBirth = document.getElementById('newp_DateOfBirth').getAttribute('value');
    //    participant.Email = document.getElementById('newp_Email').getAttribute('value');
    //    participant.ContactNumber = document.getElementById('newp_ContactNumber').getAttribute('value');
    //    participant.DietaryRequirement = document.getElementById('newp_DietaryRequirement').getAttribute('value');
    //    participant.SalaryRange = document.getElementById('newp_SalaryRange').getAttribute('value');
    //    return participant;
    //}

    function insertNewParticipant(participant) {
        console.log(participant);
        $('#newParticipants').append()
    }

    function createBegin() {
        console.log("i am beginning");
        //check if idnumber is existed in local
        var length = newParticipants.length;
        if (length != 0) {
            for (var i = 0; i < length; i++) {

            }
        }

        var jsonarray = [{ name: "test1" }, { name: "test2" }];
        console.log(jsonarray);

        //var json = JSON.stringify(jsonarray);
        //console.log(json);
        //document.getElementById('ParticipantNew').setAttribute('value', json);
        //var value = document.getElementById('ParticipantNew').getAttribute('value');
        //if ( value !== null && value !== "") {
        //    return true;
        //} else {
        //    alert("can not submit");
        //    return false;
        //}
        return false;
    }

    function createFailure(response) {
        //check if existed in db
        alert("Failed to create.")
    }

    function createSuccess(response) {
        console.log("i am successful");
        console.log(response);
        if (response) {
            //clear the data of create participant modal
            $.get('/Class/CreateParticipant').done(function (response) {
                $('#myModal1Body').html(response);
            });
            //add new participant into NewParticipants div
        } else {
            alert("The participant is existed in your employee list. Please choose from list.");
        }
        $('#myModal1').modal('hide');
    }

    

    function changeParticipants() {
        var checkedList = new Array();

        //$("input[name='employee']").each(function () {
        //    console($(this).attr('checked'));
        //    if ($(this).attr('checked') == true) {
        //        checkedList.push($(this).attr('value'));
        //    }
        //})

        var inputs = document.getElementById('modal2Body').getElementsByTagName('input');
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == 'checkbox') {
                if (inputs[i].checked) {
                    checkedList.push(inputs[i].value);
                }
            }
        }
   
        if (checkedList.length !== 0 ) {
            if (!compare(curParticipants,checkedList)) {
                $.post('GetParticipantFromList', $.param({ array: checkedList }, true), function (response) {
                    console.log(response);
                    $('#participants').html(response);
                }).done(function () {
                    curParticipants = checkedList;
                })
            }
        } else {
            curParticipants = checkedList;
            $('#participants').html('<p class="text-muted">Please add one participant at least.</p>');
        }
    }
</script>