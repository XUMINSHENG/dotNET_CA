@model CourseRegistrationSystem.Models.RegistrationViewModel
@using CourseRegistration.Models

@{
    ViewBag.Title = "RegisterClassForHR";
}

<ul class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home")</li>
    <li>@Html.ActionLink("Class", "Index", "Class")</li>
    <li>@Model.CourseClass.ClassId</li>
</ul>

<h2>@Model.CourseClass.ClassId Class Registration</h2>

<h4>@Model.CourseClass.Course.CourseTitle</h4>

<p>
    @Model.CourseClass.Course.CourseDescription
</p>

<p>Fee: @Model.CourseClass.Course.Fee</p>
<p>Duration: @Model.CourseClass.Course.NumberOfDays days</p>
<p>Start Date: @Model.CourseClass.StartDate.ToString("yyyy-MM-dd") & End Date: @Model.CourseClass.EndDate.ToString("yyyy-MM-dd")</p>

@using (Html.BeginForm("RegisterClassForHR", "Class", new { r = Model }))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">
        <div class="panel-heading" data-toggle="collapse" data-target="#collapse1" aria-expanded="true" aria-controls="collapse1">
            <h3 class="panel-title">Step1: Participant Details</h3>
        </div>
        <div class="panel-collapse collapse in" id="collapse1">
            <div class="panel-body">
                <div>
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#myModal1" data-whatever="add new">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add New Participant
                    </button>
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#myModal2" data-whatever="">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add from Employee List
                    </button>
                    <hr />
                </div>
                <div id="participants">
                    <p class="text-muted">Please add one participant at least.</p>
                </div>         
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading" data-toggle="collapse" data-target="#collapse2" aria-expanded="false" aria-controls="collapse2">
            <h3 class="panel-title">Step2: Bill Details</h3>
        </div>
        <div class="collapse" id="collapse2">
            <div class="panel-body">
                <div class="form-horizontal">
                    <h4>Billing Address</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BillingAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BillingPersonName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BillingPersonName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BillingPersonName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BillingAddressCountry, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BillingAddressCountry, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BillingAddressCountry, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BillingAddressPostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BillingAddressPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BillingAddressPostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
        </div>
    </div>


    <nav>
        <div class="pager">
            @*<li class="previous"><a href="#"><span aria-hidden="true">&larr;</span> Previous</a></li>*@
            @*<li class="next"><a href="#">Register</a></li>*@
            <button class="btn btn-primary" style="float:right;" type="submit">Register Now</button>
        </div>
    </nav>
}

<div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModal1Label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Participant</h4>
            </div>
            @using (Html.BeginForm())
                {
            @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.Partial("CreateParticipant");
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModal2Label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Employee List</h4>
            </div>
            <div class="modal-body" id="modal2Body">
                @foreach(var item in Model.Participants)
                {
                    <div class="checkbox">
                        <label>
                            @item.FullName <input type="checkbox" id="@item.ParticipantId" name="@item.FullName">
                        </label>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="empBtn">Comfirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    var paticipants;

    $('#myModal1').on('show.bs.modal', function (event) {
        //var button = $(event.relatedTarget) // Button that triggered the modal
        //var recipient = button.data('whatever') // Extract info from data-* attributes
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        //var modal = $(this)
        //modal.find('.modal-title').text(recipient)
        //modal.find('.modal-body p').text(recipient + "description")
    })

    $('#myModal2').on('show.bs.modal', function (event) {
        //$.get('GetEmployeeList', function (response) {
        //    $('#modal2Body').html(response);
        //});
    })

    $('#empBtn').click(function (event) {
        var checkedList = new Array();
        var inputs = document.getElementById('employeeList').getElementsByTagName('input');
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == 'checkbox') {
                if (inputs[i].checked) {
                    checkedList.push(inputs[i].id);
                }
            }
        }
        console.log(checkedList);
        if (checkedList.length !== 0) {
            $.post('GetParticipantFromList', $.param({array:checkedList},true), function (response) {
                console.log(response);
                $('#participants').html(response);
            });
        }
        $('#myModal2').modal('hide')
    })
</script>