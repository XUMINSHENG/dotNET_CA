@model List<CourseRegistration.Models.Participant>

<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    @foreach (var p in Model)
    {
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="heading-@p.ParticipantId" data-toggle="collapse" data-parent="#accordion" href="#collapse-@p.ParticipantId" aria-expanded="true" aria-controls="collapse-@p.ParticipantId">
                <h4 class="panel-title">
                    @p.FullName
                </h4>
            </div>
            <div id="collapse-@p.ParticipantId" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading-@p.ParticipantId">
                <div class="panel-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => p.IdNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.IdNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.IdNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.Salutation, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.Salutation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.Salutation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.EmploymentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EmploymentStatus, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmploymentStatus, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => p.JobTitle, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.JobTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.Department, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.Department, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.Department, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.FullName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => p.Gender, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => p.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.Nationality, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.Nationality, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.DateOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.ContactNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.ContactNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.DietaryRequirement, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => p.DietaryRequirement, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => p.DietaryRequirement, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => p.SalaryRange, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EnumDropDownListFor(model => p.SalaryRange, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => p.SalaryRange, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                }
                </div>
            </div>
        </div>
    }
</div>